{
  "_args": [
    [
      "ts-morph@12.2.0",
      "/Users/linea/Desktop/Test/storyflight"
    ]
  ],
  "_development": true,
  "_from": "ts-morph@12.2.0",
  "_id": "ts-morph@12.2.0",
  "_inBundle": false,
  "_integrity": "sha512-WHXLtFDcIRwoqaiu0elAoZ/AmI+SwwDafnPKjgJmdwJ2gRVO0jMKBt88rV2liT/c6MTsXyuWbGFiHe9MRddWJw==",
  "_location": "/ts-morph",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "ts-morph@12.2.0",
    "name": "ts-morph",
    "escapedName": "ts-morph",
    "rawSpec": "12.2.0",
    "saveSpec": null,
    "fetchSpec": "12.2.0"
  },
  "_requiredBy": [
    "/@astrojs/language-server"
  ],
  "_resolved": "https://registry.npmjs.org/ts-morph/-/ts-morph-12.2.0.tgz",
  "_spec": "12.2.0",
  "_where": "/Users/linea/Desktop/Test/storyflight",
  "author": {
    "name": "David Sherret"
  },
  "browser": {
    "fs": false,
    "os": false,
    "fs.realpath": false,
    "mkdirp": false,
    "dir-glob": false,
    "graceful-fs": false,
    "fast-glob": false,
    "source-map-support": false,
    "glob-parent": false,
    "glob": false
  },
  "bugs": {
    "url": "https://github.com/dsherret/ts-morph/issues"
  },
  "dependencies": {
    "@ts-morph/common": "~0.11.1",
    "code-block-writer": "^10.1.1"
  },
  "description": "TypeScript compiler wrapper for static analysis and code manipulation.",
  "devDependencies": {
    "@ts-morph/scripts": "~0.2.0",
    "@types/chai": "^4.2.22",
    "@types/diff": "^5.0.1",
    "@types/mocha": "^9.0.0",
    "@types/node": "^16.11.6",
    "@types/ts-nameof": "^4.2.1",
    "chai": "^4.3.4",
    "conditional-type-checks": "^1.0.5",
    "cross-env": "^7.0.3",
    "diff": "^5.0.0",
    "mocha": "9.1.3",
    "nyc": "15.1.0",
    "rimraf": "^3.0.2",
    "rollup": "^2.58.3",
    "rollup-plugin-typescript2": "^0.30.0",
    "ts-nameof": "^5.0.0",
    "ts-node": "10.4.0",
    "ttypescript": "1.5.12",
    "typescript": "~4.4.4"
  },
  "homepage": "https://github.com/dsherret/ts-morph#readme",
  "keywords": [
    "typescript",
    "ast",
    "static analysis",
    "code generation",
    "code refactor"
  ],
  "license": "MIT",
  "main": "dist/ts-morph.js",
  "name": "ts-morph",
  "nyc": {
    "extension": [
      ".ts",
      ".tsx"
    ],
    "include": [
      "src/**/*.ts",
      "!src/tests/**/*.ts",
      "!src/structures/utils/forEachStructureChild.ts"
    ],
    "reporter": [
      "html"
    ],
    "all": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dsherret/ts-morph.git"
  },
  "scripts": {
    "build": "npm run build:declarations && npm run build:deno && npm run build:node",
    "build:declarations": "ts-node --transpile-only scripts/generation/main create-declaration-file",
    "build:deno": "rimraf dist-deno && rollup -c --environment BUILD:deno && ts-node scripts/buildDeno.ts",
    "build:node": "rimraf dist && rollup -c ",
    "code-generate": "ts-node --transpile-only --compiler ttypescript scripts/generation/main",
    "code-verification": "ts-node --transpile-only scripts/verification/main ensure-structures-match-classes ensure-overload-structures-match ensure-array-inputs-readonly ensure-classes-implement-structure-methods ensure-mixin-not-applied-multiple-times validate-public-api-class-member-names validate-compiler-node-to-wrapped-type validate-code-fences",
    "dopublish": "npm run type-check-docs && npm run package && npm run publish-code-verification && echo \"Run: npm publish --otp\"",
    "ensure-array-inputs-readonly": "ts-node --transpile-only scripts/verification/main ensure-array-inputs-readonly",
    "ensure-no-declaration-file-errors": "ts-node --transpile-only scripts/verification/ensureNoDeclarationFileErrors",
    "ensure-no-project-compile-errors": "ts-node --transpile-only scripts/verification/ensureNoProjectCompileErrors",
    "ensure-or-throw-exists": "ts-node --transpile-only scripts/verification/main ensure-or-throw-exists",
    "ensure-overload-structures-match": "ts-node --transpile-only scripts/verification/main ensure-overload-structures-match",
    "ensure-structures-match-classes": "ts-node --transpile-only scripts/verification/main ensure-structures-match-classes",
    "output-wrapped-nodes": "ts-node --transpile-only scripts/generation/outputWrappedNodesInfo",
    "package": "npm run build",
    "publish-code-verification": "npm run code-verification && npm run ensure-no-declaration-file-errors",
    "refactor": "ts-node --transpile-only scripts/refactor",
    "test": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" mocha",
    "test:ci": "npm run test",
    "test:coverage": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" nyc --reporter=lcov mocha",
    "test:debug": "npm run test --inspect-brk",
    "test:performance": "npm run build && node ./dist/tests/performance/run.js",
    "test:performance-save": "npm run test:performance --save",
    "test:ts-versions": "ts-node --transpile-only scripts/test/testTypeScriptVersions",
    "test:watch": "npm run test --watch-extensions ts --watch",
    "type-check": "npm run type-check:library && npm run type-check:scripts",
    "type-check-docs": "ts-node --transpile-only scripts/typeCheckDocumentation.ts",
    "type-check:library": "ts-node --transpile-only scripts/typeCheckLibrary",
    "type-check:scripts": "tsc --noEmit --project scripts/tsconfig.json"
  },
  "standard-version": {
    "tagPrefix": "",
    "skip": {
      "tag": true,
      "commit": true
    }
  },
  "typings": "lib/ts-morph.d.ts",
  "version": "12.2.0"
}
