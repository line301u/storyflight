class Metadata {
  constructor(fileURL, modules, hydratedComponents, hoisted) {
    this.modules = modules;
    this.hydratedComponents = hydratedComponents;
    this.hoisted = hoisted;
    this.fileURL = new URL(fileURL);
    this.metadataCache = new Map();
  }
  resolvePath(specifier) {
    return specifier.startsWith(".") ? new URL(specifier, this.fileURL).pathname : specifier;
  }
  getPath(Component) {
    const metadata = this.getComponentMetadata(Component);
    return (metadata == null ? void 0 : metadata.componentUrl) || null;
  }
  getExport(Component) {
    const metadata = this.getComponentMetadata(Component);
    return (metadata == null ? void 0 : metadata.componentExport) || null;
  }
  getAllHydratedComponentPaths() {
    const paths = new Set();
    for (const component of this.hydratedComponents) {
      const path = this.getPath(component);
      if (path) {
        paths.add(path);
      }
    }
    for (const { module: mod } of this.modules) {
      if (typeof mod.$$metadata !== "undefined") {
        for (const path of mod.$$metadata.getAllHydratedComponentPaths()) {
          paths.add(path);
        }
      }
    }
    return paths;
  }
  getComponentMetadata(Component) {
    if (this.metadataCache.has(Component)) {
      return this.metadataCache.get(Component);
    }
    const metadata = this.findComponentMetadata(Component);
    this.metadataCache.set(Component, metadata);
    return metadata;
  }
  findComponentMetadata(Component) {
    const isCustomElement = typeof Component === "string";
    for (const { module, specifier } of this.modules) {
      const id = this.resolvePath(specifier);
      for (const [key, value] of Object.entries(module)) {
        if (isCustomElement) {
          if (key === "tagName" && Component === value) {
            return {
              componentExport: key,
              componentUrl: id
            };
          }
        } else if (Component === value) {
          return {
            componentExport: key,
            componentUrl: id
          };
        }
      }
    }
    return null;
  }
}
function createMetadata(fileURL, options) {
  return new Metadata(fileURL, options.modules, options.hydratedComponents, options.hoisted);
}
export {
  Metadata,
  createMetadata
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL3J1bnRpbWUvc2VydmVyL21ldGFkYXRhLnRzIl0sCiAgIm1hcHBpbmdzIjogIkFBVU8sZUFBZTtBQUFBLEVBR3BCLFlBQVksU0FBd0IsU0FBOEIsb0JBQWtDLFNBQWdCO0FBQWhGO0FBQThCO0FBQWtDO0FBQ2xHLFNBQUssVUFBVSxJQUFJLElBQUk7QUFDdkIsU0FBSyxnQkFBZ0IsSUFBSTtBQUFBO0FBQUEsRUFHM0IsWUFBWSxXQUEyQjtBQUNyQyxXQUFPLFVBQVUsV0FBVyxPQUFPLElBQUksSUFBSSxXQUFXLEtBQUssU0FBUyxXQUFXO0FBQUE7QUFBQSxFQUdqRixRQUFRLFdBQStCO0FBQ3JDLFVBQU0sV0FBVyxLQUFLLHFCQUFxQjtBQUMzQyxXQUFPLHNDQUFVLGlCQUFnQjtBQUFBO0FBQUEsRUFHbkMsVUFBVSxXQUErQjtBQUN2QyxVQUFNLFdBQVcsS0FBSyxxQkFBcUI7QUFDM0MsV0FBTyxzQ0FBVSxvQkFBbUI7QUFBQTtBQUFBLEVBSXRDLCtCQUE0QztBQUMxQyxVQUFNLFFBQVEsSUFBSTtBQUNsQixlQUFXLGFBQWEsS0FBSyxvQkFBb0I7QUFDL0MsWUFBTSxPQUFPLEtBQUssUUFBUTtBQUMxQixVQUFJLE1BQU07QUFDUixjQUFNLElBQUk7QUFBQTtBQUFBO0FBSWQsZUFBVyxFQUFFLFFBQVEsU0FBUyxLQUFLLFNBQVM7QUFDMUMsVUFBSSxPQUFPLElBQUksZUFBZSxhQUFhO0FBQ3pDLG1CQUFXLFFBQVEsSUFBSSxXQUFXLGdDQUFnQztBQUNoRSxnQkFBTSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBSWhCLFdBQU87QUFBQTtBQUFBLEVBR0QscUJBQXFCLFdBQTBDO0FBQ3JFLFFBQUksS0FBSyxjQUFjLElBQUksWUFBWTtBQUNyQyxhQUFPLEtBQUssY0FBYyxJQUFJO0FBQUE7QUFFaEMsVUFBTSxXQUFXLEtBQUssc0JBQXNCO0FBQzVDLFNBQUssY0FBYyxJQUFJLFdBQVc7QUFDbEMsV0FBTztBQUFBO0FBQUEsRUFHRCxzQkFBc0IsV0FBMEM7QUFDdEUsVUFBTSxrQkFBa0IsT0FBTyxjQUFjO0FBQzdDLGVBQVcsRUFBRSxRQUFRLGVBQWUsS0FBSyxTQUFTO0FBQ2hELFlBQU0sS0FBSyxLQUFLLFlBQVk7QUFDNUIsaUJBQVcsQ0FBQyxLQUFLLFVBQVUsT0FBTyxRQUFRLFNBQVM7QUFDakQsWUFBSSxpQkFBaUI7QUFDbkIsY0FBSSxRQUFRLGFBQWEsY0FBYyxPQUFPO0FBQzVDLG1CQUFPO0FBQUEsY0FDTCxpQkFBaUI7QUFBQSxjQUNqQixjQUFjO0FBQUE7QUFBQTtBQUFBLG1CQUdULGNBQWMsT0FBTztBQUM5QixpQkFBTztBQUFBLFlBQ0wsaUJBQWlCO0FBQUEsWUFDakIsY0FBYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBS3RCLFdBQU87QUFBQTtBQUFBO0FBVUosd0JBQXdCLFNBQWlCLFNBQWdDO0FBQzlFLFNBQU8sSUFBSSxTQUFTLFNBQVMsUUFBUSxTQUFTLFFBQVEsb0JBQW9CLFFBQVE7QUFBQTsiLAogICJuYW1lcyI6IFtdCn0K
